name: 🚀 JOHAN RDP PREMIUM

on:
  workflow_dispatch:
    inputs:
      duration:
        description: '🕐 Waktu penggunaan'
        required: false
        default: '5h40m'
        type: choice
        options:
        - '1h'
        - '3h' 
        - '5h40m'

jobs:
  Premium-RDP-Setup:
    runs-on: windows-latest
    timeout-minutes: 340
    
    steps:
      # BANNER SELAMAT DATANG
      - name: 🎯 MULAI SISTEM
        run: |
          Write-Host ""
          Write-Host ""
          Write-Host "🤖 JOHAN RDP PREMIUM SERVER" -ForegroundColor Yellow
          Write-Host "⚡ Powered by JOHAN-RDP" -ForegroundColor Green
          Write-Host "🕒 Waktu: ${{ github.event.inputs.duration }}" -ForegroundColor Magenta
          Write-Host "👤 Username: JOHAN-RDP" -ForegroundColor Cyan
          Write-Host "🔐 Password: Shion@1234" -ForegroundColor Cyan
          Write-Host ""
          
          # Efek loading
          $frames = @('⣾', '⣽', '⣻', '⢿', '⡿', '⣟', '⣯', '⣷')
          for($i=0; $i -lt 10; $i++) {
              Write-Host "`r🚀 Memulai sistem... $($frames[$i % 8])" -NoNewline -ForegroundColor Blue
              Start-Sleep -Milliseconds 100
          }
          Write-Host "`r✅ Sistem siap!                    " -ForegroundColor Green

      # KONFIGURASI LANJUTAN
      - name: 🔧 KONFIGURASI SISTEM
        run: |
          Write-Host ""
          Write-Host "🛠️  MENGKONFIGURASI SISTEM" -ForegroundColor Yellow
          
          $steps = @(
              @{Name="Aktifkan Remote Desktop"; Script={
                  Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name "fDenyTSConnections" -Value 0 -Force
                  Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name "fDenyTSConnections" -Value 0 -Force
              }},
              @{Name="Nonaktifkan autentikasi jaringan"; Script={
                  Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name "UserAuthentication" -Value 0 -Force
              }},
              @{Name="Konfigurasi keamanan RDP"; Script={
                  Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name "SecurityLayer" -Value 0 -Force
                  Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name "UserAuthentication" -Value 0 -Force
              }},
              @{Name="Buka port 3389 firewall"; Script={
                  netsh advfirewall firewall add rule name="JOHAN-RDP" dir=in action=allow protocol=TCP localport=3389 profile=any
                  netsh advfirewall firewall add rule name="JOHAN-RDP-Out" dir=out action=allow protocol=TCP localport=3389 profile=any
              }},
              @{Name="Mulai ulang layanan"; Script={
                  Set-Service -Name TermService -StartupType Automatic -ErrorAction SilentlyContinue
                  Set-Service -Name UmRdpService -StartupType Automatic -ErrorAction SilentlyContinue
                  Start-Service -Name TermService -ErrorAction SilentlyContinue
                  Start-Service -Name UmRdpService -ErrorAction SilentlyContinue
              }}
          )
          
          foreach($step in $steps) {
              Write-Host "│ 📋 $($step.Name)..." -NoNewline -ForegroundColor White
              try {
                  & $step.Script
                  Write-Host "`r│ ✅ $($step.Name)" -ForegroundColor Green
              } catch {
                  Write-Host "`r│ ⚠️  $($step.Name) - Abaikan error kecil" -ForegroundColor Yellow
              }
              Start-Sleep -Milliseconds 500
          }
          
          Write-Host "🎯 Konfigurasi selesai!" -ForegroundColor Green

      # BUAT USER JOHAN-RDP DENGAN PASSWORD TETAP
      - name: 👤 BUAT AKUN JOHAN-RDP
        run: |
          Write-Host ""
          Write-Host "👤 MEMBUAT AKUN JOHAN-RDP" -ForegroundColor Yellow
          
          # Gunakan password tetap
          $password = "Shion@1234"
          $securePass = ConvertTo-SecureString $password -AsPlainText -Force
          
          # Hapus user lama jika ada
          try {
              Remove-LocalUser -Name "JOHAN-RDP" -ErrorAction SilentlyContinue
              Write-Host "│ ✅ Hapus user lama" -ForegroundColor Green
          } catch {
              Write-Host "│ ℹ️  Tidak ada user lama untuk dihapus" -ForegroundColor Blue
          }
          
          # Buat user baru dengan hak penuh dan password tetap
          try {
              New-LocalUser -Name "JOHAN-RDP" -Password $securePass -AccountNeverExpires -Description "Johan RDP Premium Account"
              Write-Host "│ ✅ Buat user baru" -ForegroundColor Green
              
              # Set password tidak pernah kadaluarsa
              Set-LocalUser -Name "JOHAN-RDP" -PasswordNeverExpires $true
              
              # Tambahkan ke grup yang diperlukan
              Add-LocalGroupMember -Group "Administrators" -Member "JOHAN-RDP" -ErrorAction SilentlyContinue
              Add-LocalGroupMember -Group "Remote Desktop Users" -Member "JOHAN-RDP" -ErrorAction SilentlyContinue
              Add-LocalGroupMember -Group "Users" -Member "JOHAN-RDP" -ErrorAction SilentlyContinue
              
              # Aktifkan user
              Enable-LocalUser -Name "JOHAN-RDP"
              
              Write-Host "│ ✅ Berikan hak Administrator & RDP" -ForegroundColor Green
              
          } catch {
              Write-Host "│ ❌ Error buat user: $($_.Exception.Message)" -ForegroundColor Red
              exit 1
          }
          
          # Simpan informasi
          echo "RDP_USER=JOHAN-RDP" >> $env:GITHUB_ENV
          echo "RDP_PASS=$password" >> $env:GITHUB_ENV
          
          Write-Host "✅ Akun: JOHAN-RDP siap" -ForegroundColor Green
          Write-Host "🔐 Password: $password" -ForegroundColor Cyan

      # CEK HAK LOGIN
      - name: 🔍 CEK HAK SISTEM
        run: |
          Write-Host ""
          Write-Host "🔍 CEK HAK LOGIN" -ForegroundColor Yellow
          
          # Cek user exists
          $user = Get-LocalUser -Name "JOHAN-RDP" -ErrorAction SilentlyContinue
          if ($user) {
              Write-Host "│ ✅ User JOHAN-RDP ada" -ForegroundColor Green
              Write-Host "│ 📊 Status: $($user.Enabled)" -ForegroundColor White
          } else {
              Write-Host "│ ❌ User tidak ada" -ForegroundColor Red
              exit 1
          }
          
          # Cek hak Administrator
          $isAdmin = (Get-LocalGroupMember -Group "Administrators" | Where-Object {$_.Name -like "*JOHAN-RDP"}).Count -gt 0
          if ($isAdmin) {
              Write-Host "│ ✅ Punya hak Administrator" -ForegroundColor Green
          } else {
              Write-Host "│ ❌ Tidak punya hak Administrator" -ForegroundColor Red
          }
          
          # Cek hak Remote Desktop
          $isRDPUser = (Get-LocalGroupMember -Group "Remote Desktop Users" | Where-Object {$_.Name -like "*JOHAN-RDP"}).Count -gt 0
          if ($isRDPUser) {
              Write-Host "│ ✅ Punya hak Remote Desktop" -ForegroundColor Green
          } else {
              Write-Host "│ ❌ Tidak punya hak Remote Desktop" -ForegroundColor Red
          }
          
          # Cek layanan RDP
          $termService = Get-Service -Name TermService -ErrorAction SilentlyContinue
          if ($termService.Status -eq 'Running') {
              Write-Host "│ ✅ Layanan TermService berjalan" -ForegroundColor Green
          } else {
              Write-Host "│ ❌ Layanan TermService tidak berjalan" -ForegroundColor Red
          }
          
          Write-Host "🎯 Pengecekan selesai!" -ForegroundColor Green

      # TAILSCALE DENGAN HOSTNAME KONSISTEN
      - name: 🌐 SETUP JARINGAN KONSISTEN
        env:
          TAILSCALE_AUTH_KEY: ${{ secrets.TAILSCALE_AUTH_KEY }}
        run: |
          Write-Host ""
          Write-Host "🌐 SETUP KONEKSI JARINGAN KONSISTEN" -ForegroundColor Yellow
          
          # Install Tailscale
          try {
              $msiPath = "$env:TEMP\tailscale-setup.msi"
              Invoke-WebRequest -Uri "https://pkgs.tailscale.com/stable/tailscale-setup-latest-amd64.msi" -OutFile $msiPath
              Start-Process msiexec.exe -ArgumentList "/i", "`"$msiPath`"", "/quiet", "/norestart" -Wait
              Remove-Item $msiPath -Force -ErrorAction SilentlyContinue
              Write-Host "│ ✅ Install Tailscale berhasil" -ForegroundColor Green
          } catch {
              Write-Host "│ ❌ Error install Tailscale" -ForegroundColor Red
          }
          
          # Tunggu layanan mulai
          Start-Sleep -Seconds 10
          
          # Koneksi Tailscale dengan hostname KONSISTEN
          try {
              & "$env:ProgramFiles\Tailscale\tailscale.exe" up --authkey=$env:TAILSCALE_AUTH_KEY --hostname=johan-rdp-server --accept-routes --accept-dns --reset
              Write-Host "│ ✅ Koneksi Tailscale berhasil" -ForegroundColor Green
              Write-Host "│ 🌐 Hostname: johan-rdp-server" -ForegroundColor Cyan
          } catch {
              Write-Host "│ ❌ Error koneksi Tailscale" -ForegroundColor Red
          }
          
          # Dapatkan IP dengan mekanisme retry
          Write-Host "🔄 Mendapatkan alamat IP konsisten..." -NoNewline -ForegroundColor Blue
          $ip = $null
          for($i=0; $i -lt 25; $i++) {
              try {
                  $ip = & "$env:ProgramFiles\Tailscale\tailscale.exe" ip -4 2>&1
                  if ($ip -and $ip -match '^\d+\.\d+\.\d+\.\d+$') {
                      # Simpan IP untuk penggunaan konsisten
                      echo "TAILSCALE_IP=$ip" >> $env:GITHUB_ENV
                      echo "RDP_IP=$ip" >> $env:GITHUB_ENV
                      Write-Host "`r✅ Alamat IP: $ip" -ForegroundColor Green
                      break
                  }
              } catch {
                  # Abaikan error dan coba lagi
              }
              Write-Host "`r🔄 Mendapatkan alamat IP konsisten... $(@('.', '..', '...')[$i % 3])" -NoNewline -ForegroundColor Blue
              Start-Sleep -Seconds 3
          }
          
          if (-not $ip -or $ip -notmatch '^\d+\.\d+\.\d+\.\d+$') {
              Write-Host "`r⚠️  Tidak bisa dapat IP, coba gunakan MagicDNS" -ForegroundColor Yellow
              $magicDNS = "johan-rdp-server.tailscale-up"
              echo "TAILSCALE_IP=$magicDNS" >> $env:GITHUB_ENV
              echo "RDP_IP=$magicDNS" >> $env:GITHUB_ENV
              Write-Host "🌐 MagicDNS: $magicDNS" -ForegroundColor Cyan
          }

      # TAMPILKAN INFORMASI KONEKSI
      - name: 🎉 INFORMASI KONEKSI
        run: |
          # Konversi waktu dari input ke menit
          $durationInput = "${{ github.event.inputs.duration }}"
          switch ($durationInput) {
              "1h" { $totalMinutes = 60; $displayTime = "1 jam" }
              "3h" { $totalMinutes = 180; $displayTime = "3 jam" }
              "5h40m" { $totalMinutes = 340; $displayTime = "5 jam 40 menit" }
          }
          
          # Hitung waktu tepat
          $timeZone = [System.TimeZoneInfo]::FindSystemTimeZoneById("SE Asia Standard Time")
          $waktuMulai = [System.TimeZoneInfo]::ConvertTimeFromUtc((Get-Date).ToUniversalTime(), $timeZone)
          $waktuSelesai = $waktuMulai.AddMinutes($totalMinutes)
          
          Write-Host ""
          Write-Host "┌───────────────────────────────────────────┐" -ForegroundColor Cyan
          Write-Host "│           🎉 KONEKSI BERHASIL!           │" -ForegroundColor Cyan
          Write-Host "├───────────────────────────────────────────┤" -ForegroundColor Cyan
          Write-Host "│ 🌐  Alamat: $env:RDP_IP" -ForegroundColor White
          Write-Host "│ 👤  Username: JOHAN-RDP" -ForegroundColor White
          Write-Host "│ 🔐  Password: Shion@1234" -ForegroundColor White
          Write-Host "│ ⏰  Durasi: $displayTime" -ForegroundColor White
          Write-Host "│ 🕐  Mulai: $($waktuMulai.ToString('HH:mm:ss'))" -ForegroundColor White
          Write-Host "│ 🕐  Selesai: $($waktuSelesai.ToString('HH:mm:ss'))" -ForegroundColor White
          Write-Host "│ 📍  Port: 3389" -ForegroundColor White
          Write-Host "│ 🖥️  Hostname: johan-rdp-server" -ForegroundColor White
          Write-Host "├───────────────────────────────────────────┤" -ForegroundColor Cyan
          Write-Host "│ 💡  Petunjuk:                            │" -ForegroundColor Cyan
          Write-Host "│   1. Buka Remote Desktop Connection      │" -ForegroundColor Yellow
          Write-Host "│   2. Masukkan: $env:RDP_IP              │" -ForegroundColor Yellow
          Write-Host "│   3. User: JOHAN-RDP                     │" -ForegroundColor Yellow
          Write-Host "│   4. Password: Shion@1234                │" -ForegroundColor Yellow
          Write-Host "│   5. Enjoy! 🚀                          │" -ForegroundColor Yellow
          Write-Host "└───────────────────────────────────────────┘" -ForegroundColor Cyan
          Write-Host ""
          Write-Host "💡 **FITUR KONSISTEN:**" -ForegroundColor Magenta
          Write-Host "   • Username & Password selalu sama" -ForegroundColor White
          Write-Host "   • IP cenderung tetap sama" -ForegroundColor White
          Write-Host "   • Bisa reconnect kapan saja" -ForegroundColor White
          
          # Simpan waktu ke environment variable
          echo "TOTAL_MINUTES=$totalMinutes" >> $env:GITHUB_ENV

      # PERTAHANKAN SESI STABIL
      - name: ⏳ PERTAHANKAN SESI KERJA
        run: |
          $totalMinutes = $env:TOTAL_MINUTES
          
          # Hitung waktu tepat
          $timeZone = [System.TimeZoneInfo]::FindSystemTimeZoneById("SE Asia Standard Time")
          $waktuMulai = [System.TimeZoneInfo]::ConvertTimeFromUtc((Get-Date).ToUniversalTime(), $timeZone)
          $waktuSelesai = $waktuMulai.AddMinutes($totalMinutes)
          
          Write-Host ""
          Write-Host "🔄 MEMULAI PERTAHANAN SESI KERJA..." -ForegroundColor Yellow
          Write-Host "💎 Sesi: JOHAN RDP PREMIUM" -ForegroundColor Magenta
          Write-Host "🔗 Koneksi: $env:RDP_IP" -ForegroundColor Cyan
          Write-Host "👤 Username: JOHAN-RDP" -ForegroundColor Cyan
          Write-Host "🔐 Password: Shion@1234" -ForegroundColor Cyan
          Write-Host "🕐 Mulai: $($waktuMulai.ToString('HH:mm:ss'))" -ForegroundColor Green
          Write-Host "🕐 Selesai: $($waktuSelesai.ToString('HH:mm:ss'))" -ForegroundColor Green
          Write-Host ""
          
          # Buat process monitor sistem
          $monitorScript = {
              $lastLogTime = Get-Date
              while ($true) {
                  $currentTime = Get-Date
                  
                  # Log status setiap 2 menit
                  if (($currentTime - $lastLogTime).TotalMinutes -ge 2) {
                      # Cek layanan
                      $termService = Get-Service -Name TermService -ErrorAction SilentlyContinue
                      $rdpConnections = Get-NetTCPConnection -LocalPort 3389 -ErrorAction SilentlyContinue | Where-Object {$_.State -eq 'Established'}
                      
                      Write-Host "[$($currentTime.ToString('HH:mm:ss'))] 📊 Status - RDP: $($termService.Status), Koneksi: $($rdpConnections.Count)" -ForegroundColor Blue
                      $lastLogTime = $currentTime
                  }
                  
                  # Cek dan restart layanan jika perlu
                  $termService = Get-Service -Name TermService -ErrorAction SilentlyContinue
                  if ($termService.Status -ne 'Running') {
                      Write-Host "[$($currentTime.ToString('HH:mm:ss'))] 🔄 Restart TermService..." -ForegroundColor Yellow
                      Start-Service -Name TermService -ErrorAction SilentlyContinue
                  }
                  
                  Start-Sleep -Seconds 30
              }
          }
          
          # Jalankan monitor di background
          Start-Job -ScriptBlock $monitorScript -Name "SystemMonitor"
          
          # Tampilkan timer utama
          $frames = @('⠋', '⠙', '⠹', '⠸', '⠼', '⠴', '⠦', '⠧', '⠇', '⠏')
          $colors = @('Red', 'Yellow', 'Green', 'Cyan', 'Blue', 'Magenta')
          $startTime = Get-Date
          
          do {
              $waktuSekarang = [System.TimeZoneInfo]::ConvertTimeFromUtc((Get-Date).ToUniversalTime(), $timeZone)
              $waktuTersisa = $waktuSelesai - $waktuSekarang
              
              $jamTersisa = [math]::Max(0, [math]::Floor($waktuTersisa.TotalHours))
              $menitTersisa = [math]::Max(0, [math]::Floor($waktuTersisa.TotalMinutes % 60))
              $detikTersisa = [math]::Max(0, [math]::Floor($waktuTersisa.TotalSeconds % 60))
              
              $frame = $frames[([int]((Get-Date) - $startTime).TotalSeconds) % $frames.Length]
              $color = $colors[([int]((Get-Date) - $startTime).TotalMinutes) % $colors.Length]
              
              Write-Host "`r$frame [$($waktuSekarang.ToString('HH:mm:ss'))] Waktu tersisa: $jamTersisa jam $menitTersisa menit $detikTersisa detik" -NoNewline -ForegroundColor $color
              
              Start-Sleep -Seconds 5
              
          } while ($waktuTersisa.TotalSeconds -gt 0)
          
          Write-Host ""
          Write-Host "🎯 WAKTU HABIS - OTOMATIS BERHENTI!" -ForegroundColor Red
          
          # Bersihkan jobs
          Get-Job -Name "SystemMonitor" -ErrorAction SilentlyContinue | Stop-Job -PassThru | Remove-Job -Force

      # PEMBERSIHAN TANPA HAPUS USER
      - name: 🧹 BERSIHKAN SISTEM
        if: always()
        run: |
          Write-Host ""
          Write-Host "🧹 MEMBERSIHKAN SISTEM..." -ForegroundColor Yellow
          
          $cleanupSteps = @(
              @{Name="Tutup koneksi jaringan"; Script={
                  & "$env:ProgramFiles\Tailscale\tailscale.exe" down --accept-risk=all -ErrorAction SilentlyContinue
                  Start-Sleep -Seconds 5
              }},
              @{Name="Hapus rule firewall"; Script={
                  netsh advfirewall firewall delete rule name="JOHAN-RDP" dir=in -ErrorAction SilentlyContinue
                  netsh advfirewall firewall delete rule name="JOHAN-RDP-Out" dir=out -ErrorAction SilentlyContinue
                  Remove-NetFirewallRule -DisplayName "JOHAN-RDP" -ErrorAction SilentlyContinue
                  Remove-NetFirewallRule -DisplayName "JOHAN-RDP-Out" -ErrorAction SilentlyContinue
              }},
              @{Name="Nonaktifkan RDP sementara"; Script={
                  Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name "fDenyTSConnections" -Value 1 -Force -ErrorAction SilentlyContinue
                  Stop-Service -Name TermService -Force -ErrorAction SilentlyContinue
              }}
          )
          
          foreach($step in $cleanupSteps) {
              Write-Host "│ 🗑️  $($step.Name)..." -NoNewline -ForegroundColor Gray
              try {
                  & $step.Script
                  Write-Host "`r│ ✅ $($step.Name)" -ForegroundColor Green
              } catch {
                  Write-Host "`r│ ⚠️  $($step.Name) - Ditangani dengan aman" -ForegroundColor Yellow
              }
              Start-Sleep -Milliseconds 300
          }
          
          # User JOHAN-RDP TIDAK dihapus agar tetap bisa reconnect
          Write-Host "│ 💾 User JOHAN-RDP disimpan untuk sesi berikutnya" -ForegroundColor Green
          
          # Bersihkan jobs yang tersisa
          Get-Job | Stop-Job -PassThru | Remove-Job -Force -ErrorAction SilentlyContinue
          
          Write-Host ""
          Write-Host "🎉 Pembersihan selesai! User tetap tersimpan! 👋" -ForegroundColor Green
          Write-Host "💡 Untuk reconnect, jalankan workflow lagi dengan:" -ForegroundColor Magenta
          Write-Host "   • Username: JOHAN-RDP" -ForegroundColor White
          Write-Host "   • Password: Shion@1234" -ForegroundColor White
          Write-Host "   • IP: Sama seperti sebelumnya" -ForegroundColor White
